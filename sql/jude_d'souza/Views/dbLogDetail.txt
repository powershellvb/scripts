--Requires SQL2016 SP2

select db=db_name(mf.database_id), mf.name AS Logical_Name,mf.file_id--,mf.Physical_Name
,Drive=vs.volume_mount_point,volTotMB=vs.total_bytes/1048576,volAvailMB=vs.available_bytes/1048576,volUsedMB=(vs.total_bytes-vs.available_bytes)/1048576
,ls.total_log_size_mb,PercentUsed=round(ls.total_log_size_mb*1048576*100/(vs.total_bytes-vs.available_bytes),2)
,growthType=case mf.is_percent_growth when 1 then 'percentage' else 'size in 8K pages' end
,NextGrowthMB=case mf.is_percent_growth when 1 then (mf.growth*ls.total_log_size_mb/100) else mf.growth/128 end
,maxSizeMB=mf.max_size/128
,[%Active]=cast(ls.active_log_size_mb*100/ls.total_log_size_mb as numeric(5,2))
,[%ActiveVlfs]=cast(ls.active_vlf_count*100./ls.total_vlf_count as numeric(10,4)),ls.log_backup_time, ls.* -- trigger smart log backup
--,AlterCmd='ALTER DATABASE ['+db_name(mf.database_id)+'] MODIFY FILE (NAME = N'''+mf.name+''', SIZE = '+cast(ceiling(ls.total_log_size_mb) as varchar(16))+'MB, FILEGROWTH = 256MB, MAXSIZE = UNLIMITED)'
from sys.master_files mf
cross apply sys.dm_db_log_stats(mf.database_id) ls
cross apply sys.dm_os_volume_stats(mf.database_id, mf.file_id) vs
where mf.type_desc  = 'LOG' 
--and vs.volume_mount_point = 'L:\'
and mf.database_id = db_id()


SELECT DB_NAME(database_id) AS DatabaseName ,database_id
,CAST((total_log_size_in_bytes / 1048576.0 ) AS DECIMAL(20, 1)) AS totalLogSizeMB
,CAST((used_log_space_in_bytes / 1048576.0 ) AS DECIMAL(20, 1)) AS logSpaceUsedMB
,CAST(used_log_space_in_percent AS DECIMAL(20, 1)) AS LogSpaceUsedPercent
,CAST((total_log_size_in_bytes - used_log_space_in_bytes) / 1048576.0  AS DECIMAL(20, 1)) AS [freeLogSpaceMB]
,CAST((log_space_in_bytes_since_last_backup / 1048576.0 ) AS DECIMAL(20, 1)) AS logSpaceUsedSinceLastLogBackupMB -- 2014+
FROM sys.dm_db_log_space_usage;


-- replaces 'dbcc loginfo'
select db.name,li.* 
--	,sum(cast(li.vlf_active as tinyint)), sum(case when li.vlf_status=2 then 1 else 0 end)
from sys.databases db
outer apply sys.dm_db_log_info  (db.database_id) li
where db.database_id = db_id()
--group by db.name
order by vlf_sequence_number


-- log activity measured by log backup size
SELECT  d.name AS database_name, d.state_desc, recovery_model_desc, backup_finish_date,backupName=s.name 
,DATEDIFF(hour, backup_finish_date, GETDATE()) AS hours_since, DATEDIFF(DAY, backup_finish_date, GETDATE()) AS days_since, m.physical_device_name, CASE [type] WHEN 'D' THEN 'DATABASE' WHEN 'I' THEN 'DIFFERENTIAL' WHEN 'L' THEN 'LOG' WHEN 'G' THEN 'FILE OR FILEGROUP' WHEN 'P' THEN 'PARTIAL' WHEN 'Q' THEN 'DIFFERIENTIAL PARTIAL' ELSE '???' END AS [type_desc], backup_start_date
, ROW_NUMBER() OVER(PARTITION BY database_name ORDER BY backup_finish_date DESC) AS Row, CAST(s.backup_size / POWER(1024,2) AS DECIMAL(9,2)) AS [backupSize(mb)], s.backup_set_id
, CAST(s.compressed_backup_size / POWER(1024,2) AS DECIMAL(9,2)) AS [backupSizeCompressed(mb)] --2008+
FROM sys.databases d 
	LEFT JOIN msdb.dbo.backupset s ON d.name = s.database_name
	LEFT JOIN msdb.dbo.backupmediafamily m ON s.media_set_id = m.media_set_id
WHERE d.name = 'CM_H01' and type = 'L' and backup_start_date > dateadd(week, -1, GETDATE())
order by backup_finish_date

